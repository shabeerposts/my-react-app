
# React Project with Tailwind CSS and Radix UI

This is a React-based web application, styled with **Tailwind CSS** and enhanced using **Radix UI** components. The project is set up to support scalable development with a modular structure, focusing on flexibility and modern UI practices.

## Features
- Modular file structure for better scalability.
- Custom components like `Card` and `Dialog` using **Radix UI**.
- Tailwind CSS setup for styling directly in JSX with utility classes.
- Responsive design out of the box.
- Configuration for clean and efficient production builds using PostCSS.

## Getting Started

### Prerequisites
Ensure you have the following installed:
- Node.js (v14 or higher)
- npm (v6 or higher)
- A code editor like VS Code or PyCharm Community Edition (configured for JSX and React).

### Project Setup
1. Clone the repository:
   ```bash
   git clone <repository-url>
   cd my-react-app
   ```

2. Install dependencies:
   ```bash
   npm install
   ```

3. Run the development server:
   ```bash
   npm start
   ```
   The app will be available at `http://localhost:3000`.

## Project Dependencies

### Core Libraries:
- `react`: Core React library for UI components.
- `react-dom`: DOM-specific methods for React.
- `react-scripts`: Scripts and configuration for building and testing React apps.

### Styling:
- `tailwindcss`: A utility-first CSS framework.
- `postcss` & `autoprefixer`: Used for processing and optimizing CSS.

### UI Components:
- `@radix-ui/react-dialog`, `@radix-ui/react-tabs`, and `@radix-ui/react-slot`: For building accessible and customizable UI components.
- `lucide-react`: Icon library for React components.

### Utility Helpers:
- `class-variance-authority` & `clsx`: For managing conditional class names.

## Tailwind CSS Configuration
Tailwind CSS has been set up to enable custom styling and utility classes. The configuration includes:
- Adding the required `@tailwind base`, `@tailwind components`, and `@tailwind utilities` directives in `src/index.css`.
- A `tailwind.config.js` file for custom configurations like themes and plugins.

## File Structure
```
my-react-app/
├── public/                # Public static files
├── src/                   # Main application code
│   ├── components/        # Reusable UI components
│   ├── App.js             # Main React component
│   ├── index.js           # Entry point of the app
│   ├── index.css          # Global CSS styles
│   └── ...                # Additional files and folders
├── package.json           # Project dependencies and scripts
├── tailwind.config.js     # Tailwind CSS configuration
└── README.md              # Project documentation
```

## Troubleshooting

### Common Issues

#### Blank Browser Screen
- Ensure `App.js` and `index.js` are correctly set up.
- Confirm that all imported components and files exist and are spelled correctly.

#### CSS or JSX Files Not Highlighted
- Make sure your editor supports JSX syntax highlighting.
- Install the relevant plugins or extensions for your editor (e.g., React plugin for VS Code).

#### Errors with Tailwind CSS
- Verify the `tailwind.config.js` file is correctly set up and includes required plugins.
- Ensure `postcss` and `autoprefixer` are installed and configured.

## License
This project is open-source and available for personal and educational use.
